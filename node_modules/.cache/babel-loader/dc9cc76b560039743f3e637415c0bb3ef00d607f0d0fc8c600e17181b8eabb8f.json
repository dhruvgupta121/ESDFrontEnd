{"ast":null,"code":"var _jsxFileName = \"/home/gaurav/Desktop/ESD/MiniProject/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Notification from './components/Notification';\nimport Salaries from './components/Salaries';\nimport salaryService from './services/SalariesService';\nimport loginService from './services/loginService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [salaries, setSalaries] = useState([]);\n  const [notification, setNotification] = useState(null);\n  const [notificationType, setNotificationType] = useState(null);\n  const notificationHandler = (message, type) => {\n    setNotification(message);\n    setNotificationType(type);\n    setTimeout(() => {\n      setNotificationType(null);\n      setNotification(null);\n    }, 3000);\n  };\n  const handleLogin = async credentials => {\n    try {\n      const userObject = await loginService.login(credentials);\n      setUser(userObject);\n      window.localStorage.setItem('loggedInUser', JSON.stringify(userObject));\n      notificationHandler(`Logged in successfully as ${userObject.firstName}`, 'success');\n      setSalaries([]);\n    } catch (exception) {\n      notificationHandler(`Log in failed, check username entered`, 'error');\n    }\n  };\n  useEffect(() => {\n    async function fetchData() {\n      if (user) {\n        const salaries = await salaryService.getUserSalaries(user);\n        setSalaries(salaries);\n      }\n    }\n    fetchData();\n  }, [user]);\n  useEffect(() => {\n    const loggedInUser = window.localStorage.getItem('loggedInUser');\n    if (loggedInUser) setUser(JSON.parse(loggedInUser));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center page-header p-2 regular-text-shadow regular-shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"display-4 font-weight-bold\",\n        children: \"Faculty Salary History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      notification: notification,\n      type: notificationType\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), user === null && /*#__PURE__*/_jsxDEV(LoginForm, {\n      startLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), user !== null && /*#__PURE__*/_jsxDEV(Salaries, {\n      salaries: salaries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xL7v9V2HzWXZw03qxb/u+/HYPpU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","LoginForm","Notification","Salaries","salaryService","loginService","App","user","setUser","salaries","setSalaries","notification","setNotification","notificationType","setNotificationType","notificationHandler","message","type","setTimeout","handleLogin","credentials","userObject","login","window","localStorage","setItem","JSON","stringify","firstName","exception","fetchData","getUserSalaries","loggedInUser","getItem","parse"],"sources":["/home/gaurav/Desktop/ESD/MiniProject/frontend/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport LoginForm from './components/LoginForm'\nimport Notification from './components/Notification'\nimport Salaries from './components/Salaries'\n\nimport salaryService from './services/SalariesService'\nimport loginService from './services/loginService'\n\nconst App = () => {\n  const [ user, setUser ] = useState(null)\n  const [ salaries, setSalaries ] = useState([])\n  const [ notification, setNotification ] = useState(null)\n  const [ notificationType, setNotificationType ] = useState(null)\n\n  const notificationHandler = (message, type) => {\n    setNotification(message)\n    setNotificationType(type)\n\n    setTimeout(() => {\n      setNotificationType(null)\n      setNotification(null)\n    }, 3000)\n  }\n\n  const handleLogin = async (credentials) => {\n    try {\n      const userObject = await loginService.login(credentials)\n      setUser(userObject)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(userObject))\n      \n      notificationHandler(`Logged in successfully as ${userObject.firstName}`, 'success')\n      setSalaries([])\n    }\n    catch (exception) {\n      notificationHandler(`Log in failed, check username entered`, 'error')\n    }\n  }\n\n  useEffect(() => {\n    async function fetchData() {\n      if (user) {\n        const salaries = await salaryService.getUserSalaries(user)\n        setSalaries(salaries)\n      }\n    }\n    fetchData()\n}, [user])\n\n\nuseEffect(() => {\n  const loggedInUser = window.localStorage.getItem('loggedInUser')\n  if (loggedInUser)\n    setUser(JSON.parse(loggedInUser))\n}, [])\n\n\n\n\n  return (\n    <div>\n      {/* Header of the page */}\n      <div className='text-center page-header p-2 regular-text-shadow regular-shadow'>\n          <div className='display-4 font-weight-bold'>\n            Faculty Salary History\n          </div>\n      </div>\n      \n      {/* Notification component that will render only when the notification state is not null */}\n      <Notification notification={notification} type={notificationType} />\n\n      {\n        user === null && \n        <LoginForm startLogin={handleLogin}/>\n      }\n\n      {\n        user !== null &&\n        <Salaries\n          salaries={salaries}\n        />\n      }\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}